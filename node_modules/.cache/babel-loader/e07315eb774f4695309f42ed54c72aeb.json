{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './root-reducer';\nimport rootSaga from './';\nconst sagaMIddleware = createSagaMiddleware();\nconst middlewares = [sagaMIddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMIddleware.run(fetchCollectionsStart);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Users/daichi/Desktop/crwn-clothing01/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","rootReducer","rootSaga","sagaMIddleware","middlewares","process","env","NODE_ENV","push","store","run","fetchCollectionsStart","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,IAArB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,MAAMI,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA5B,EAA0C;AACtCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACH;;AAED,OAAO,MAAMU,KAAK,GAAGb,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBC,qBAAnB;AAEA,OAAO,MAAMC,SAAS,GAAGd,YAAY,CAACW,KAAD,CAA9B;AAEP,eAAe;AAACA,EAAAA,KAAD;AAAQG,EAAAA;AAAR,CAAf","sourcesContent":["import {createStore, applyMiddleware} from 'redux'; \nimport {persistStore} from 'redux-persist'; \nimport logger from 'redux-logger'; \nimport createSagaMiddleware from 'redux-saga'; \n\nimport rootReducer from './root-reducer'; \nimport rootSaga from './'\n\nconst sagaMIddleware = createSagaMiddleware(); \n\nconst middlewares = [sagaMIddleware]; \n\nif(process.env.NODE_ENV === 'development'){\n    middlewares.push(logger); \n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); \n\nsagaMIddleware.run(fetchCollectionsStart); \n\nexport const persistor = persistStore(store); \n\nexport default {store, persistor}; "]},"metadata":{},"sourceType":"module"}