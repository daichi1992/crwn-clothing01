{"ast":null,"code":"var _jsxFileName = \"/Users/daichi/Desktop/crwn-clothing01/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n    this.unsbscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/daichi/Desktop/crwn-clothing01/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","CollectionsOverview","CollectionPage","ShopPage","Component","state","unsbscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;;AAGA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B,EAD0B;AAAA,SAIlCC,sBAJkC,GAIT,IAJS;AAAA;;AAMlCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAAER,MAAAA;AAAF,QAAwB,KAAKS,KAAnC;AACA,UAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACvC,YAAMC,cAAc,GAAGf,+BAA+B,CAACc,QAAD,CAAtD;AACAb,MAAAA,iBAAiB,CAACc,cAAD,CAAjB;AACH,KAHD;AAIH;;AAEDC,EAAAA,MAAM,GAAE;AACR,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKP,KAArB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEO,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEf,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEc,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAEd,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMC;;AAxBiC;;AAyBrC;;AAED,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACpCnB,EAAAA,iBAAiB,EAAEc,cAAc,IAC7BK,QAAQ,CAACnB,iBAAiB,CAACc,cAAD,CAAlB;AAFwB,CAAL,CAAnC;;AAKA,eAAejB,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkCd,QAAlC,CAAf","sourcesContent":["import React from 'react'; \nimport { Route } from 'react-router-dom'; \nimport { connect } from 'react-redux'; \n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'; \n\nimport { updateCollections } from '../../redux/shop/shop.actions'; \n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'; \n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'; \nimport CollectionPage from '../collection/collection.component';\n\n\nclass ShopPage extends React.Component{\n    state = {\n        \n    }\n    unsbscribeFromSnapshot = null; \n\n    componentDidMount(){\n        const { updateCollections } = this.props; \n        const collectionRef = firestore.collection('collections'); \n\n        collectionRef.onSnapshot(async snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot); \n            updateCollections(collectionsMap); \n        }); \n    }\n    \n    render(){\n    const {match} = this.props; \n    return(\n        <div className='shop-page'>\n            <Route exact path={`${match.path}`} component={CollectionsOverview} />\n            <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n        </div>\n        )\n    }; \n}; \n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => \n        dispatch(updateCollections(collectionsMap)) \n}); \n\nexport default connect(null, mapDispatchToProps)(ShopPage); "]},"metadata":{},"sourceType":"module"}