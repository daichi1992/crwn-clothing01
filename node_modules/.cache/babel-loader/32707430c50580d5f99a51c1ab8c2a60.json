{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\n;\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSignInStart() {\n  console.log('start');\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/daichi/Desktop/crwn-clothing01/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","auth","googleProvider","createUserProfileDocument","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","googleSignInSuccess","id","data","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","console","log","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,aAAT,EAAwBC,mBAAxB,EAA6CC,kBAA7C,EAAiEC,kBAAjE,QAA2F,gBAA3F;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AAEA,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAG;AACC,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAArB;AACA,UAAMK,OAAO,GAAG,MAAMZ,IAAI,CAACQ,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CACLiB,mBAAmB,CAAC;AAACC,MAAAA,EAAE,EAAEH,YAAY,CAACG,EAAlB;AAAsB,SAAGH,YAAY,CAACI,IAAb;AAAzB,KAAD,CADd,CAAT;AAGH,GAPD,CAOE,OAAMC,KAAN,EAAY;AACV,UAAMpB,GAAG,CAACK,mBAAmB,CAACe,KAAD,CAApB,CAAT;AACH;AACJ;AAAA;AAED,OAAO,UAAUC,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAV,CAA1B,EAAyD;AAC5D,MAAG;AACC,UAAM;AAAEZ,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACiB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMV,OAAO,GAAG,MAAMZ,IAAI,CAACQ,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CACLM,kBAAkB,CAAC;AAACY,MAAAA,EAAE,EAAEH,YAAY,CAACG,EAAlB;AAAsB,SAAGH,YAAY,CAACI,IAAb;AAAzB,KAAD,CADb,CAAT;AAGH,GAPD,CAOE,OAAMC,KAAN,EAAY;AACV,UAAMpB,GAAG,CAACO,kBAAkB,CAACa,KAAD,CAAnB,CAAT;AACH;AACJ;AAED,OAAO,UAAUM,mBAAV,GAA+B;AAClC,QAAM3B,UAAU,CAACI,eAAe,CAACwB,oBAAjB,EAAuChB,gBAAvC,CAAhB;AACH;AAAA;AAED,OAAO,UAAUiB,kBAAV,GAA8B;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,QAAM/B,UAAU,CAACI,eAAe,CAAC4B,mBAAjB,EAAsCV,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUW,SAAV,GAAqB;AACxB,QAAM/B,GAAG,CAAC,CAACC,IAAI,CAACwB,mBAAD,CAAL,EAA4BxB,IAAI,CAAC0B,kBAAD,CAAhC,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'; \n\nimport UserActionTypes from './user.types'; \n\nimport { signInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions'; \n\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils'; \n\nexport function* signInWithGoogle(){\n    try{\n        const {user} = yield auth.signInWithPopup(googleProvider); \n        const userRef = yield call(createUserProfileDocument, user); \n        const userSnapshot = yield userRef.get(); \n        yield put(\n            googleSignInSuccess({id: userSnapshot.id, ...userSnapshot.data()})\n        )\n    } catch(error){\n        yield put(googleSignInFailure(error)); \n    }\n}; \n\nexport function* signInWithEmail({payload: { email, password }}){\n    try{\n        const { user } = yield auth.signInWithEmailAndPassword(email, password); \n        const userRef = yield call(createUserProfileDocument, user); \n        const userSnapshot = yield userRef.get(); \n        yield put(\n            emailSignInSuccess({id: userSnapshot.id, ...userSnapshot.data()})\n        )\n    } catch(error){\n        yield put(emailSignInFailure(error)); \n    }\n}\n\nexport function* onGoogleSignInStart(){\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle); \n}; \n\nexport function* onEmailSignInStart(){\n    console.log('start'); \n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail); \n}\n\nexport function* userSagas(){\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]); \n}"]},"metadata":{},"sourceType":"module"}