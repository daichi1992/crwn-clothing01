{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyA8vZhxE2cvqTGTwt5EWgekvSiQGaEW86g\",\n  authDomain: \"crwn-db-55455.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-55455.firebaseio.com\",\n  projectId: \"crwn-db-55455\",\n  storageBucket: \"crwn-db-55455.appspot.com\",\n  messagingSenderId: \"957662573273\",\n  appId: \"1:957662573273:web:99bcda44313474a08144c8\",\n  measurementId: \"G-RLJD1HX53Z\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return; // console.log(userAuth); \n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const collectionRef = firestore.collection('users');\n  console.log(collectionRef); // console.log(userRef); \n\n  const snapShot = await userRef.get();\n  const collectionSnapshot = await collectionRef.get();\n  console.log(collectionSnapshot.docs.map(doc => doc.data())); // console.log(snapShot); \n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n\n    console.log('called');\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  console.log('caaa');\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nfirebase.initializeApp(config);\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  propmt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["/Users/daichi/Desktop/crwn-clothing01/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","collectionRef","collection","console","log","snapShot","get","collectionSnapshot","docs","map","data","exists","displayName","email","createdAt","Date","set","error","message","addCollectionAndDocuments","collectionKey","objectsToAdd","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumulator","initializeApp","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","propmt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app'; \nimport 'firebase/firestore'; \nimport 'firebase/auth'; \n\nconst config = {\n    apiKey: \"AIzaSyA8vZhxE2cvqTGTwt5EWgekvSiQGaEW86g\",\n    authDomain: \"crwn-db-55455.firebaseapp.com\",\n    databaseURL: \"https://crwn-db-55455.firebaseio.com\",\n    projectId: \"crwn-db-55455\",\n    storageBucket: \"crwn-db-55455.appspot.com\",\n    messagingSenderId: \"957662573273\",\n    appId: \"1:957662573273:web:99bcda44313474a08144c8\",\n    measurementId: \"G-RLJD1HX53Z\"\n}; \n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if(!userAuth) return; \n    // console.log(userAuth); \n\n    const userRef = firestore.doc(`users/${userAuth.uid}`); \n    const collectionRef = firestore.collection('users'); \n    console.log(collectionRef); \n    // console.log(userRef); \n    \n    const snapShot = await userRef.get(); \n    const collectionSnapshot = await collectionRef.get(); \n    console.log(collectionSnapshot.docs.map(doc => doc.data())); \n    // console.log(snapShot); \n\n    if(!snapShot.exists){\n        const {displayName, email} = userAuth; \n        const createdAt = new Date(); \n\n        try{\n            await userRef.set({\n                displayName, \n                email, \n                createdAt, \n                ...additionalData\n            }); \n        } catch(error){\n            console.log('error creating user', error.message); \n        } \n\n        console.log('called'); \n    }\n\n    return userRef; \n}\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n    const collectionRef = firestore.collection(collectionKey); \n    \n    const batch = firestore.batch(); \n    objectsToAdd.forEach(obj => {\n        const newDocRef = collectionRef.doc(); \n        batch.set(newDocRef, obj); \n    })\n\n    console.log('caaa'); \n    return await batch.commit(); \n\n}\n\nexport const convertCollectionsSnapshotToMap = collections => {\n    const transformedCollection = collections.docs.map(doc => {\n        const {title, items} = doc.data(); \n\n        return{\n            routeName: encodeURI(title.toLowerCase()), \n            id: doc.id, \n            title, \n            items\n        }\n    })\n    \n    return transformedCollection.reduce((accumulator, collection) => {\n        accumulator[collection.title.toLowerCase()] = collection; \n        return accumulator; \n    }, {}); \n\n}; \n\n\nfirebase.initializeApp(config); \n\nexport const getCurrentUser = () => {\n    return new Promise((resolve, reject) => {\n        const unsubscribe = auth.onAuthStateChanged(userAuth => {\n            unsubscribe(); \n            resolve(userAuth); \n        }, reject)\n    }); \n}\n\nexport const auth = firebase.auth(); \nexport const firestore = firebase.firestore(); \n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider(); \ngoogleProvider.setCustomParameters({propmt: 'select_account'}); \nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider); \n\nexport default firebase; \n"]},"metadata":{},"sourceType":"module"}