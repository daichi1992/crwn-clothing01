{"ast":null,"code":"var _jsxFileName = \"/Users/daichi/Desktop/crwn-clothing01/src/components/sign-up/sign-up.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const [user, setUser] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = user; // constructor(){\n  //     super(); \n  //     this.state = {\n  //         displayName: '', \n  //         email: '', \n  //         password: '', \n  //         confirmPassword: ''\n  //     }\n  // }\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // const { signUpStart } = this.props; \n    // const {displayName, email, password, confirmPassword} = this.state; \n\n    if (password !== confirmPassword) {\n      alert('passwords do not match');\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUser({ ...user,\n      [name]: value\n    });\n  }; // const {displayName, email, password, confirmPassword} = this.state; \n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"SIGN IN\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/daichi/Desktop/crwn-clothing01/src/components/sign-up/sign-up.component.jsx"],"names":["React","connect","FormInput","CustomButton","signUpStart","SignUp","userCredentials","setCredentials","useState","email","password","user","setUser","displayName","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'; \nimport { connect } from 'react-redux'; \n\nimport FormInput from '../form-input/form-input.component'; \nimport CustomButton from '../custom-button/custom-button.component'; \n\nimport { signUpStart } from '../../redux/user/user.actions'; \n\nimport './sign-up.styles.scss'; \n\nconst SignUp = ({signUpStart}) => {\n    const [userCredentials, setCredentials] = useState({email: '', password: ''}); \n    const [user, setUser] = useState({displayName: '', email: '', password: '', confirmPassword: ''}); \n    const {displayName, email, password, confirmPassword} = user; \n\n    // constructor(){\n    //     super(); \n\n    //     this.state = {\n    //         displayName: '', \n    //         email: '', \n    //         password: '', \n    //         confirmPassword: ''\n    //     }\n    // }\n\n    const handleSubmit = async event => {\n        event.preventDefault(); \n        // const { signUpStart } = this.props; \n        // const {displayName, email, password, confirmPassword} = this.state; \n        if(password !== confirmPassword){\n            alert('passwords do not match'); \n            return; \n        }\n        signUpStart({displayName, email, password}); \n    }; \n    \n    const handleChange = event => {\n        const {name, value} = event.target; \n        setUser({...user, [name]: value}); \n    }\n\n        // const {displayName, email, password, confirmPassword} = this.state; \n\n        return (\n        <div className='sign-up'>\n            <h2 className='title'>I do not have an account</h2>\n            <span>Sign up with your email and password</span>\n            <form className='sign-up-form' onSubmit={handleSubmit}>\n                <FormInput \n                    type='text' \n                    name='displayName'\n                    value={displayName}\n                    onChange={handleChange}\n                    label='Display Name' \n                    required\n                />\n                <FormInput \n                    type='email' \n                    name='email'\n                    value={email}\n                    onChange={handleChange}\n                    label='Email' \n                    required\n                />\n                <FormInput \n                    type='password' \n                    name='password'\n                    value={password}\n                    onChange={handleChange}\n                    label='Password' \n                    required\n                />\n                <FormInput \n                    type='password' \n                    name='confirmPassword'\n                    value={confirmPassword}\n                    onChange={handleChange}\n                    label='Confirm Password' \n                    required\n                />\n                <CustomButton type='submit'>SIGN IN</CustomButton>\n            </form>\n        </div>\n    )\n    \n}\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n})\n\nexport default connect(null, mapDispatchToProps)(SignUp); "]},"metadata":{},"sourceType":"module"}